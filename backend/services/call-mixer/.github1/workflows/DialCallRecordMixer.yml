name: DialCallRecordMixer - QA

on:
  workflow_dispatch:

env:
  ENVIRONMENT: production
  TAG: qa
  PROJECT_ID: plat4me-dial
  GKE_CLUSTER: kl-qa-k8s
  GKE_ZONE: europe-west1-d
  SERVICE_TYPE: deployment
  SERVICE_NAME: kl-callrecord-mixer
  IMAGE: gcr.io/kl-manage/kl-callrecord-mixer
  TARGET_DOCKERFILE: ./Plat4Me.DialCallRecordMixer/Cloudbuild/Dockerfile

jobs:
  dirty_hack:
    steps:
      - run: |
          echo ""
    runs-on: arc-runner-set
    outputs:
      IMAGE: ${{env.IMAGE}}
      KUBE_FILTER: "app=${{env.SERVICE_NAME}}"
      DOCKER_FILE: ${{env.TARGET_DOCKERFILE}}
      PROJECT_ID: ${{env.PROJECT_ID}}
      GKE_CLUSTER: ${{env.GKE_CLUSTER}}
      GKE_ZONE: ${{env.GKE_ZONE}}
      TAG: ${{env.TAG}}

  build_and_deploy_app:
    needs: dirty_hack
    name: build & deploy app with share wf
    permissions:
      contents: "read"
      id-token: "write"

    uses: Plat4Me/shared_workflows/.github/workflows/build_app.yaml@main
    with:
      image_name: ${{ needs.dirty_hack.outputs.IMAGE}}
      docker_file: ${{ needs.dirty_hack.outputs.DOCKER_FILE }}
      build_context: "."
      tag: ${{ needs.dirty_hack.outputs.TAG}}
      BUILD_ARGS: |
        GITHUB_SHA=${{ github.sha }}
        GITHUB_REF=${{ github.ref }}
      deploy: true
      KUBECTL_FILTER: ${{ needs.dirty_hack.outputs.KUBE_FILTER }}
      GKE_CLUSTER: ${{ needs.dirty_hack.outputs.GKE_CLUSTER}}
      GKE_ZONE: ${{ needs.dirty_hack.outputs.GKE_ZONE }}
      PROJECT_ID: ${{ needs.dirty_hack.outputs.PROJECT_ID }}
    secrets: inherit
#  setup-build-publish-deploy:
#    name: Setup, Build, Publish, and Deploy
#    runs-on: self-hosted
#    environment: production
#
#    permissions:
#      contents: "read"
#      id-token: "write"
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      # Alternative option - authentication via credentials json
#      - id: "auth"
#        uses: "google-github-actions/auth@v0"
#        with:
#          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
#
#      - uses: "docker/login-action@v2"
#        with:
#          registry: "gcr.io" # or REGION-docker.pkg.dev
#          username: _json_key
#          password: "${{ secrets.GCP_CREDENTIALS }}"
#
#      # Get the GKE credentials, so we can deploy to the cluster
#      - name: Set up GKE credentials
#        uses: google-github-actions/get-gke-credentials@v0
#        with:
#          cluster_name: ${{ env.GKE_CLUSTER }}
#          location: ${{ env.GKE_ZONE }}
#          project_id: ${{ env.PROJECT_ID }}
#
#      # Build and Push the Docker image
#      - name: Build and Push
#        uses: docker/build-push-action@v3
#        with:
#          file: ${{env.TARGET_DOCKERFILE}}
#          context: .
#          push: true
#          tags: |
#            ${{ env.IMAGE }}:${{github.sha}}
#            ${{ env.IMAGE }}:qa
#          build-args: |
#            token=${{ secrets.NPM_TOKEN }}
#      - name: Deploy
#        run: |-
#          kubectl rollout restart $SERVICE_TYPE/$SERVICE_NAME
